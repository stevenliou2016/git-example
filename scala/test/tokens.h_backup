enum TOKENS{
	TOKEN_COMMA = 260,
	TOKEN_COLON,
	TOKEN_PERIOD,
	TOKEN_SEMICOLON,
	TOKEN_LEFT_PARENTHESE,
	TOKEN_RIGHT_PARENTHESE,
	TOKEN_LEFT_SQUARE_BRACKET,
	TOKEN_RIGHT_SQUARE_BRACKET,
	TOKEN_LEFT_BRACKET,
	TOKEN_RIGHT_BRACKET,
	TOKEN_ADD = 300,
	TOKEN_SUB,
	TOKEN_MUL,
	TOKEN_DIV,
	TOKEN_MOD,
	TOKEN_LT,
	TOKEN_LTE,
	TOKEN_GTE,
	TOKEN_GT,
	TOKEN_EQ,
	TOKEN_NEQ,
	TOKEN_LOGICAL_AND,
	TOKEN_LOGICAL_OR,
	TOKEN_LOGICAL_NOT,
	TOKEN_BOOLEAN = 350,
	TOKEN_BREAK,
	TOKEN_CHAR,
	TOKEN_CASE,	
	TOKEN_CLASS,
	TOKEN_CONTINUE,
	TOKEN_DEF,
	TOKEN_DO,
	TOKEN_ELSE,
	TOKEN_EXIT,
	TOKEN_FALSE,
	TOKEN_FLOAT,
	TOKEN_FOR,
	TOKEN_IF,
	TOKEN_INT,
	TOKEN_NULL,
	TOKEN_OBJECT,
	TOKEN_PRINT,
	TOKEN_PRINTLN,
	TOKEN_REPEAT,
	TOKEN_RETURN,
	TOKEN_STRING,
	TOKEN_TO,
	TOKEN_TRUE,
	TOKEN_TYPE,
	TOKEN_VAL,
	TOKEN_VAR,
	TOKEN_WHILE,
	TOKEN_ID = 400,
	TOKEN_CONSTANT_INT,
	TOKEN_CONSTANT_REAL,
	TOKEN_CONSTANT_STRING
	TOKEN_ASSIGN = 410,
	TOKEN_ASSIGN_ADD,
	TOKEN_ASSIGN_SUB,
	TOKEN_ASSIGN_MUL,
	TOKEN_ASSIGN_DIV,
	TOKEN_ASSIGN_MOD
};

const char* getTokenSymbol(enum TOKEN);

